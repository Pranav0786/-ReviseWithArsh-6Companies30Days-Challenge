LeetCode 216

class Solution {

    void helper( int ind , int sum ,int n , vector<int> &temp , vector<vector<int>> &ans , int k )
    {
        if( sum == n && k == 0 )
        {
            ans.push_back( temp ) ;
            return ;
        }

        if( sum > n ) return ;

        for( int i = ind ; i < 10 ; i++ )
        {
            if( i > n ) break ;
            temp.push_back( i ) ;
            helper(i+1,sum+i,n,temp , ans , k-1 ) ;
            temp.pop_back() ;
        }
    }
public:
    vector<vector<int>> combinationSum3(int k, int n) {
        
        vector<int> temp ;
        vector<vector<int>> ans ;
        helper( 1,0 , n , temp ,ans ,k ) ;
        return ans ;
    }
};