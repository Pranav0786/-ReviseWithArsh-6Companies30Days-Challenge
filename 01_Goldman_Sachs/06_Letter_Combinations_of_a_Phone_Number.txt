LeetCode 17

class Solution {

    void solve( string digit , string output , int index ,vector<string> &ans , string mapping[] )
    {
        if( index >= digit.size() )
        {
            ans.push_back(output) ;
            return ;
        }

        int num = digit[index] - '0' ;
        string value = mapping[num] ;

        for( int i = 0 ; i < value.size() ;  i++ )
        {
            output.push_back(value[i]) ;
            solve( digit , output ,index+1 ,  ans , mapping ) ;
            output.pop_back() ;
        }
    }
public:
    vector<string> letterCombinations(string digits) {
        
        vector<string> ans ;
        if( digits.size() == 0 ) return ans ;
        string output ;
        int index = 0 ;
        string mapping [10] = {"","","abc","def","ghi", "jkl" , "mno" , "pqrs" , "tuv" ,"wxyz"} ;
        solve( digits , output ,index ,  ans , mapping ) ;

        return ans ;
    }
};